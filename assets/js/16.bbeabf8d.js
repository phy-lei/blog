(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{591:function(t,n,a){"use strict";a.r(n);var s=a(6),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[t._v("给nginx配置安装目录,就是nginx存放的目录，一般安装软件都是安装在/usr/local下面的，所以我们cd /usr/local，在创建一个新文件夹 mkdir nginx")]),t._v(" "),a("h3",{attrs:{id:"_1-进入nginx目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-进入nginx目录"}},[t._v("#")]),t._v(" 1.进入nginx目录")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("cd nginx")])]),t._v(" "),a("h3",{attrs:{id:"_2-使用wget命令下载nginx资源包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用wget命令下载nginx资源包"}},[t._v("#")]),t._v(" 2.使用wget命令下载nginx资源包")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("wget http://nginx.org/download/nginx-1.5.9.tar.gz")])]),t._v(" "),a("h3",{attrs:{id:"_3-解压"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-解压"}},[t._v("#")]),t._v(" 3.解压")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("tar -zxvf nginx-1.5.9.tar.gz")])]),t._v(" "),a("h3",{attrs:{id:"_4-执行-configure命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-执行-configure命令"}},[t._v("#")]),t._v(" 4.执行 ./configure命令")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("cd nginx-1.5.9"),a("br"),t._v("\n./configure")])]),t._v(" "),a("p",[t._v("可能会有一些报错，这时我们安装下其他模块")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("yum -y install pcre-devel"),a("br"),t._v("\nyum -y install openssl openssl-devel")])]),t._v(" "),a("h3",{attrs:{id:"_5-编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-编译"}},[t._v("#")]),t._v(" 5.编译")]),t._v(" "),a("p",[t._v("make 编译 （make的过程是把各种语言写的源码文件，变成可执行文件和各种库文件）")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("cd /usr/local/nginx/nginx-1.5.9\nmake")])]),t._v(" "),a("h3",{attrs:{id:"_6-make-install安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-make-install安装"}},[t._v("#")]),t._v(" 6.make install安装")]),t._v(" "),a("p",[t._v("make install 安装 （make install是把这些编译出来的可执行文件和库文件复制到合适的地方）")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("make install")])]),t._v(" "),a("h3",{attrs:{id:"_7-启动nginx服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-启动nginx服务"}},[t._v("#")]),t._v(" 7.启动nginx服务")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("cd /usr/local/nginx/sbin"),a("br"),t._v("\n./nginx")])]),t._v(" "),a("h3",{attrs:{id:"_8-查看端口使用情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-查看端口使用情况"}},[t._v("#")]),t._v(" 8.查看端口使用情况")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("netstat -ntpl")])]),t._v(" "),a("p",[t._v("如果有看到除了80端口外，还有8080或者其他端口，证明配置成功了")]),t._v(" "),a("p",[t._v("如果启动失败，要杀nginx进程")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("killall -9 nginx")])]),t._v(" "),a("p",[t._v("然后再次启动即可")]),t._v(" "),a("h3",{attrs:{id:"_9-ngingx-重启命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-ngingx-重启命令"}},[t._v("#")]),t._v(" 9.ngingx 重启命令")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("/usr/local/nginx/sbin/nginx -s reload")])]),t._v(" "),a("h3",{attrs:{id:"_10-我的nginx-conf配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-我的nginx-conf配置"}},[t._v("#")]),t._v(" 10.我的nginx.conf配置")]),t._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  server {\n      listen 8080; \n      server_name 域名; # 自己PC的ip或者服务器的域名 charset utf-8; # 避免中文乱码 \n      root /home/public/; # 存放文件的目录 \n      location / { \n        try_files $uri $uri/ @router;\n        index  index.html;\n        autoindex on; # 索引 \n        autoindex_exact_size on; # 显示文件大小 \n        autoindex_localtime on; # 显示文件时间 \n      }\n      location @router {\n    \t  rewrite ^.*$ /index.html last;\n      } \n    }\n\n   server {\n        listen       8080;    # 监听端口（别人访问你服务器时输入的端口）\n        server_name  mos-backend;\n        # 配置虚拟主机\n        location / {\n            proxy_pass http://域名;   # 反向代理（自己电脑的ip:自己本地开启的服务器的端口）\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Credentials' 'true';\n            add_header 'Access-Control-Allow-Methods' 'PUT, GET, POST, DELETE, OPTIONS';\n            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-\tRequested-With,If-Modified-Since,Cache-Control,Content-Type,x-ijt';\n            \n        }\n    }\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);